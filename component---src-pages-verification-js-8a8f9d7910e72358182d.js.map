{"version":3,"sources":["webpack:///./static/frame.png","webpack:///./src/pages/verification.js","webpack:///./static/photo.png"],"names":["module","exports","Verification","useState","photoDone","setPhotoDone","media","streamRef","height","streaming","video","document","getElementById","canvas","photo","startbutton","takepicture","data","context","getContext","width","translate","scale","drawImage","toDataURL","setAttribute","classList","add","setTimeout","getTracks","forEach","track","stop","fillStyle","fillRect","clearphoto","removeAttribute","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","play","catch","err","console","log","addEventListener","ev","videoHeight","videoWidth","preventDefault","useEffect","className","id","autoplay","muted","playsInline","src","frame","class","onClick"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,qD,kCCA3C,0EA8IeC,UAzIM,WAAO,IAAD,EACUC,oBAAS,GAArCC,EADkB,KACPC,EADO,KAInBC,EAAQ,WACZ,IASIC,EARAC,EAAS,EAETC,GAAY,EAEZC,EAAQC,SAASC,eAAe,SAChCC,EAASF,SAASC,eAAe,UACjCE,EAAQH,SAASC,eAAe,SAChCG,EAAcJ,SAASC,eAAe,eAgC1C,SAASI,IACP,IACIC,EADAC,EAAUL,EAAOM,WAAW,MAEnBX,GACXK,EAAOO,MA5CC,KA6CRP,EAAOL,OAASA,EAEhBU,EAAQG,UA/CA,KA+CiB,GACzBH,EAAQI,OAAO,EAAG,GAClBJ,EAAQK,UAAUb,EAAO,EAAG,EAjDpB,KAiD8BF,GAGtCS,EAAOJ,EAAOW,UAAU,aAGxBV,EAAMW,aAAa,MAAOR,GAC1BZ,GAAa,GACbS,EAAMY,UAAUC,IAAI,QAEpBC,YAAW,WACTrB,EAAUsB,YAAYC,SAAQ,SAAAC,GAAK,OAAIA,EAAMC,YAC5C,MAMP,WACE,IAAId,EAAUL,EAAOM,WAAW,MAChCD,EAAQe,UAAY,OAGpBf,EAAQgB,SAAS,EAAG,EAAGrB,EAAOO,MAAOP,EAAOL,QAI5C,IAAIS,EAAOJ,EAAOW,UAAU,aAC5BV,EAAMW,aAAa,MAAOR,GAdxBkB,GApDJrB,EAAMsB,gBAAgB,OAEtBC,UAAUC,aACPC,aAAa,CAAE7B,OAAO,EAAM8B,OAAO,IACnCC,MAAK,SAAUC,GACdnC,EAAYmC,EACZhC,EAAMiC,UAAYD,EAClBhC,EAAMkC,UAEPC,OAAM,SAAUC,GACfC,QAAQC,IAAI,sBAAwBF,MAGxCpC,EAAMuC,iBACJ,WACA,SAAUC,GACHzC,IACHD,EAASE,EAAMyC,aAAezC,EAAM0C,WA5B9B,MA8BN1C,EAAMe,aAAa,QA9Bb,MA+BNf,EAAMe,aAAa,SAAUjB,GAC7BK,EAAOY,aAAa,QAhCd,MAiCNZ,EAAOY,aAAa,SAAUjB,GAC9BC,GAAY,MAGhB,GA2CFM,EAAYkC,iBACV,SACA,SAAUC,GACRlC,IACAkC,EAAGG,oBAEL,IAUJ,OANAC,qBAAU,YACS,IAAdlD,GACDE,MACD,CAACF,IAIF,oCACA,yBAAKmD,UAAU,kCAAkCC,GAAG,WAClD,yBAAKD,UAAU,mBAEX,2BAAOC,GAAG,QAAQC,UAAQ,EAACC,OAAK,EAACC,aAAW,GAA5C,+BAGA,yBAAKJ,UAAU,QAAQK,IAAKC,OAEhC,4BAAQL,GAAG,WACX,yBAAKM,MAAM,UACT,yBAAKN,GAAG,YAERpD,GACC,4BAAQoD,GAAG,cAAcD,UAAU,qBAClC,yBAAKK,IAAK9C,OAIbV,GACC,yBAAKmD,UAAU,yBACb,4BAAQA,UAAU,sBAAlB,iDACA,4BAAQA,UAAU,oBAAoBC,GAAG,cACvCO,QAAS,WACT1D,GAAa,KAFf,kB,qBCjIVL,EAAOC,QAAU,IAA0B","file":"component---src-pages-verification-js-8a8f9d7910e72358182d.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/frame-3ac5f2ff83bc198bc775d508241ec225.png\";","import React, { useEffect, useState } from \"react\"\nimport frame from \"../../static/frame.png\"\nimport photo from \"../../static/photo.png\"\n\n\nconst Verification = () => {\n  const [photoDone, setPhotoDone ] = useState(false);\n\n\n  const media = () => {\n    var width = 1280 // We will scale the photo width to this\n    var height = 0 // This will be computed based on the input stream\n\n    var streaming = false\n\n    let video = document.getElementById(\"video\")\n    let canvas = document.getElementById(\"canvas\")\n    let photo = document.getElementById(\"photo\")\n    let startbutton = document.getElementById(\"startbutton\")\n    let streamRef\n\n    photo.removeAttribute(\"src\");\n\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: false })\n      .then(function (stream) {\n        streamRef = stream\n        video.srcObject = stream\n        video.play()\n      })\n      .catch(function (err) {\n        console.log(\"An error occurred: \" + err)\n      })\n\n    video.addEventListener(\n      \"canplay\",\n      function (ev) {\n        if (!streaming) {\n          height = video.videoHeight / (video.videoWidth / width)\n\n          video.setAttribute(\"width\", width)\n          video.setAttribute(\"height\", height)\n          canvas.setAttribute(\"width\", width)\n          canvas.setAttribute(\"height\", height)\n          streaming = true\n        }\n      },\n      false\n    )\n\n    function takepicture() {\n      var context = canvas.getContext(\"2d\");\n      var data;\n      if (width && height) {\n        canvas.width = width\n        canvas.height = height\n       \n        context.translate(width, 0);\n        context.scale(-1, 1);\n        context.drawImage(video, 0, 0, width, height)\n        \n\n        data = canvas.toDataURL(\"image/png\")\n        \n\n        photo.setAttribute(\"src\", data);\n        setPhotoDone(true);\n        photo.classList.add('show')\n\n        setTimeout(() => {\n          streamRef.getTracks().forEach(track => track.stop())\n        }, 300)\n      } else {\n        clearphoto()\n      }\n    }\n\n    function clearphoto() {\n      var context = canvas.getContext(\"2d\")\n      context.fillStyle = \"#AAA\"\n     \n\n      context.fillRect(0, 0, canvas.width, canvas.height)\n\n      \n\n      var data = canvas.toDataURL(\"image/png\")\n      photo.setAttribute(\"src\", data)\n    }\n\n    startbutton.addEventListener(\n      \"click\",\n      function (ev) {\n        takepicture()\n        ev.preventDefault()\n      },\n      false\n    )\n  }\n\n  useEffect(() => {\n    if(photoDone === false)\n      media();\n  }, [photoDone])\n\n\n  return (\n    <>\n    <div className=\"verification orientationchange \" id=\"fade_it\">\n      <div className=\"video_container\">\n\n          <video id=\"video\" autoplay muted playsInline>\n            Video stream not available.\n          </video>\n          <img className=\"frame\" src={frame} />\n      </div>\n      <canvas id=\"canvas\"></canvas>\n      <div class=\"output\">\n        <img id=\"photo\" />\n      </div>\n      {!photoDone && (\n         <button id=\"startbutton\" className=\"button_make_photo\">\n          <img src={photo} />\n       </button>\n      )}\n\n      {photoDone && (\n        <div className=\"button_done_container\">\n          <button className=\"button is-primary \"> selfie wyraźle, przejdź do skanowania dowodu</button>\n          <button className='button is-primary' id=\"clear_photo\" \n            onClick={() => {\n            setPhotoDone(false);\n            \n          }}> powtórz </button>\n        </div>\n      )}\n    </div>\n \n    </>\n  )\n}\n\nexport default Verification\n","module.exports = __webpack_public_path__ + \"static/photo-f6702b1099205a7f1a9195bbd9b410b1.png\";"],"sourceRoot":""}